{
  
    
        "post0": {
            "title": "Unit 3 Section 7",
            "content": "Unit 3 Section 7 . Learning Objectives . Write nested conditional statements Determine the result of nested conditional statement . Vocab . Nested conditional: A conditional inside of a conditional . Nested Conditionals . Nested conditionals are often used in algorithms in order to print specific data or run certain tasks. . We can use conditionals inside conditionals to create further conditions in algorithms. . We can use flowcharts to help display an easy to understand diagram of what we want a code segment to do. . Flowchart . # Defining dictionaries for each stock apple = { &quot;ticker&quot;: &quot;AAPL&quot;, &quot;p/e&quot;: 24.73, &quot;price&quot;: 151.20, &quot;eps&quot;: 6.11, &quot;volume&quot;: 55916992 } netflix = { &quot;ticker&quot;: &quot;NFLX&quot;, &quot;p/e&quot;: 25.96, &quot;price&quot;: 291.50, &quot;eps&quot;: 11.23, &quot;volume&quot;: 5814124 } docusign = { &quot;ticker&quot;: &quot;DOCU&quot;, &quot;p/e&quot;: -85.8, &quot;price&quot;: 46.52, &quot;eps&quot;: -0.45, &quot;volume&quot;: 3332106 } # Creating function def stockfinder(stock): # Creating first if-else statement based on P/E ratio if stock[&quot;p/e&quot;] &gt; 5: # Going for the nested check based on price if the first if statement is satisfied if stock[&quot;price&quot;] &lt; 200: print(&quot;You can purchase &quot; + stock[&quot;ticker&quot;] + &quot;.&quot;) else: print(&quot;You cannot purchase &quot; + stock[&quot;ticker&quot;] + &quot;.&quot;) # Function will go to this if the P/E is not greater than 5 else: print(stock[&quot;ticker&quot;] + &quot;&#39;s P/E ratio is too low.&quot;) stockfinder(apple) # Will say Apple can be bought stockfinder(netflix) # Will say Netflix is too expensive stockfinder(docusign) # Will say DocuSign&#39;s P/E ratio is too low . You can purchase AAPL. You cannot purchase NFLX. DOCU&#39;s P/E ratio is too low. . Practice Questions . 1. Is this an example of a nested conditional? . space &lt;-- 90 | download &lt;-- 20 | IF (space &gt; download) { DISPLAY(&quot;File can be downloaded.&quot;) | } | . Yes | No | Answer and explanation 2. There is only one conditional statement. 2. What does this code display? . price &lt;-- 200 | discount &lt;-- 65 | IF (price &gt; 100) { IF (discount &gt; 50) { DISPLAY(&quot;You can buy this item.&quot;) . } ELSE { DISPLAY(&quot;You cannot purchase this item.&quot;) . } } | . You cannot purchase this item. | 50 | You can buy this item. | 65 | Answer and explanation 3. The value of price is greater than a 100, which satisfies the 1st conditional. The 2nd if statement inside is satisfied, as the discount value is greater than 50. Thus the code from inside the 2nd if statement is displayed.",
            "url": "https://muffinman1287.github.io/BARN//BARN/csp/2022/11/28/u3-s7.html",
            "relUrl": "/csp/2022/11/28/u3-s7.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 3 Sections 6",
            "content": "Unit 3 Section 6 . Learning Objectives . Write conditional statements | Determine the result of conditional statements | . Vocab . Algorithm: Finite set of instructions that accomplish a specific task . Conditional Statements . Conditional statements allow the code to act based on multiple conditions, such as user input or stored data. | We can use conditionals in algorithms in order to receive different outputs from a set of code, and help achieve the general purpose of the algorithm. | . Categories . Two broad types of conditional statements are if statements and if-else statements . if statement: will go through certain statements if the if expression is true | if-else statement: will go through a statement no matter what, but the statement which is run depends on the if expression is true or false | . number1 = 28 number2 = 43 def lessthan30(num): # Example of if statement if num &lt; 30: # If this condition is true(variable is less than 30) print(num) # Then the value of the variable will be printed lessthan30(number1) # The if statement is true, so it will print the value of 28 lessthan30(number2) # The if statement is false, nothing will be printed. . 28 . number1 = 28 number2 = 43 def lessthan30(num): # Example of if statement if num &lt; 30: # If this condition is true(variable is less than 30) print(num) # Then the value of the variable will be printed # Adding else statement else: # If the if statement is false, the algorithm will go to this statement print(&quot;The value is too large!&quot;) lessthan30(number1) # The if statement is true, so it will print the value of 28 lessthan30(number2) # The if statement is false, so the else function will run and state the value is too large . 28 The value is too large! . Flow Charts . We can use flowcharts to help organize the process of conditional statements. | This allows us to diagram the work and have an image of what the process will look like | . A flowchart . We can use this to write pseudocode. . S &lt;-- 12 IF (S MOD 2 = 0) { DISPLAY (S) } ELSE { DISPLAY (&quot;This number is not even.&quot;) } . Converting this to a sequence of python code is very easy thanks to having an easy plan to follow. . S = 12 if S % 2 == 0: print(S) else: print(&quot;This number is not even.&quot;) . 12 . Using conditionals is very helpful for going through a list of data. . Practice Questions . 1. What value will be displayed . rank &lt;-- &quot;titan&quot; | hall &lt;-- 14 | IF (rank = &quot;titan&quot;) { DISPLAY(&quot;You like Clash of Clans a lot.&quot;) | } | . You like Clash of Clans a lot. | 14 | titan | rank | Answer and explanation 1. Since rank = &quot;titan&quot;, the if statement is executed, displaying the code in it. 2. What portion of the code will run? . class &lt;-- 33 | cookies &lt;-- 25 | IF (class &lt; cookies) { DISPLAY(&quot;Give out cookies today.&quot;) | } | ELSE { DISPLAY(&quot;Do not give out cookies today.&quot;) | } | . The if portion | The else portion | Answer and explanation 2. Since the value in class is greater than the value in cookies, the else statement part runs.",
            "url": "https://muffinman1287.github.io/BARN//BARN/csp/2022/11/28/u3-s6.html",
            "relUrl": "/csp/2022/11/28/u3-s6.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 3 Sections 5",
            "content": "Unit 3 Section 5 . Learning Objectives . Write expressions with logical operators | Evaluate expressions that use logical operators | . Vocab . Boolean binary variable with only two possible values, &quot;true&quot; or &quot;false&quot; . Relational Operators . There are multiple operators which are used to evaluate 2 variables. In pseudocode the relational operators are =, &gt;, &lt;, ≠, ≥, and ≤. Other languages use different formats to represent these operators. For example, Python uses != instead of ≠. These operators help determine the boolean value of a statement. . print(30 &gt; 19) # Will output true, since is 30 is larger than 19 # Using variables and strings a = &quot;Yes&quot; b = &quot;No&quot; print(a == b) # Will output false, not the same # Renaming b b = &quot;Yes&quot; print(a == b) # Will output true, since both variables match . True False True . Logical Operators . Logical operators allow for boolean values to be evaluated. Pseudocode uses the logical operators NOT, AND, and OR. Javascript uses the same logic, but uses different ways to represent the operators: &amp;&amp;(and), | |(or), |(not). . print(1 == 1 and 10 &gt;= 0) # Returns true because both statements are true cookies = 25 brownies = 30 print(&quot;There is enough dessert&quot;) # First condition is false, but second condition is true print(cookies == 50 or cookies + brownies &gt;= 35) # Ends up returning true since at least one condition is true # The expression &quot;Blue&quot; != &quot;Green&quot; is false print(not &quot;Blue&quot; != &quot;Green&quot;) # Not operator changes statement to not false, printing true . True There is enough dessert True False . Relational Operators Table Value 1 and Value 2(And operator) Value 1 Value 2 Result . True | True | True | . True | False | False | . False | True | False | . False | False | False | . Value 1 or Value 2(Or operator) Value 1 Value 2 Result . True | True | True | . True | False | True | . False | True | True | . False | False | False | . Not operator Not Value Result . Not | True | False | . Not | False | True | . . Operators and booleans can be very useful, allowing a program to create an algorithm based on user inputs items stored in list. For example, operators can be used to perform multiple operations on lists. . Practice Questions . 1. What boolean value would result be? . a &lt;-- 19 | b &lt;-- 28 | result &lt;-- a = b | . True | False | Answer and explanation B. a was assigned the value of 19, which is less than the value of 28 assigned to b. 2. What boolean value would result be? . score &lt;-- 99 | average &lt;-- 99 | result &lt;-- score ≤ average | . True | False | Answer and explanation A. score was assigned a value of 99, and so was average. Since it asks if score is less than or equal to average, which score is the same as, this results in true. 3. What boolean value would be displayed? . type &lt;-- &quot;dog&quot; | training &lt;-- &quot;yes&quot; | DISPLAY((NOT (type = &quot;dog&quot;)) AND (training = &quot;no&quot;)) | . True | False | Answer and explanation A. Since type = &quot;dog&quot;, the first statement(Not (type = &quot;dog&quot;)) becomes FALSE. The second part is FALSE because training = &quot;yes&quot;. This causes the statement to be FALSE AND FALSE",
            "url": "https://muffinman1287.github.io/BARN//BARN/csp/2022/11/28/u3-s5.html",
            "relUrl": "/csp/2022/11/28/u3-s5.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Unit 3 Sections 5-7 Hacks",
            "content": "For hacks, make a copy of this notebook and answer the questions or complete the code, as described in comments. Additionally, blog about any missed questions, or what you learned from this lesson. . 3.5 Hacks . Binary Practice . Using psuedocode operators determine if the statements are true or false. The number type will be indicated in parentheses. . 1. 90(D) = 1000(B) . A. True | B. False | . 2. 10(D) ≠ 0110(B) . A. True | B. False | . 3. 56(D) ≥ 111000(B) . A. True | B. False | . 3. 99(D) &lt; 1110011(B) . A. True | B. False | . Now, complete the binary truth tables . AND Operator Value 1 Value 2 Result . 1 | BLANK | 1 | . 1 | 0 | BLANK | . BLANK | 1 | 0 | . BLANK | 0 | 0 | . OR Operator Value 1 Value 2 Result . 1 | 1 | BLANK | . BLANK | 0 | 1 | . 0 | 1 | 1 | . 0 | BLANK | 0 | . Not operator Not Value Result . Not | BLANK | 0 | . Not | 0 | BLANK | . . Python Practice . # Practice with these statements print(20 == 20) # How can you change the operator to print a value of False? x = 30 y = 20 z = 10 print(x &gt; y + z) # How can this return true by only manipulating the operator? # Manipulate the variables x, y, and z to make the below statement return true print(x == z) . 3.6 Hacks . AP Prep . 1. What is displayed by this code? . result &lt;-- 75 | IF result &lt; 80 { DISPLAY(&quot;Please schedule a retake.&quot;) } | ELSE { DISPLAY(&quot;Nice job!&quot;) } | . Nice job! | Display | Please schedule a retake. | 75 | 2. How is an if statement different from an if-else statement. . Extra words. | An if statement will only go through a process if a condition is met. An if-else statement will go through code no matter the conditions. | They are the exact same. | An if statement will go through the entire code segment every single time and the if-else statement is always used in an algorithm, no matter the conditions. | 3. What would be most appropriate for this situation? Ben wants to check his bank account. If his car fuel is full, he will go to the bank. Otherwise, he will go home. If he goes to the bank, he will withdraw money only if his balance is above $1000. . If statement | If-else statement | 4. What would be most appropriate for this situation? Luke wants to play basketball. If it is sunny outside he will go to the park to play basketball. . If statement | If-else statement | Using Python . animals = [&quot;lion&quot;, &quot;tiger&quot;, &quot;wildebeest&quot;, &quot;shark&quot;, &quot;jellyfish&quot;, &quot;blobfish&quot;, &quot;raven&quot;] for i in animals: if i == &quot;shark&quot;: # What boolean value does this statement cause? print(&quot;Fun Fact: The smallest shark is the dwarf lantern shark, and it is small enough to hold in your hand!&quot;) else: print(i) # Practice # Using only one more if statement, alter the code to print out a statement saying if an animal lives in the desert, based on booleans . 3.7 Hacks . Exercise 1 . Create dictionaries for multiple food items, with the listed specifications Chicken Alfredo, Meat: Chicken, Time to Prepare: 60 minutes | Cheese Quesadilla, Meat: None, Time to Prepare: 10 minutes | Beef Wellington, Meat: Beef, Time to Prepare: 150 minutes | . | Used nested conditionals, determine which meal you can cook, given that a) you have no meat at home, and b) you only have 30 minutes to make the meal | . . Exercise 2 . Make a flowchart(here is one we used) and write pseudocode for the following scenario. . Mr. Yeung would like to grade live reviews. | He wants to see if each student has at least 2 issues on their project. If they don&#39;t they receive a score of 2.0. | If they have at least 2 issues, check that they have completed at least 5 of their scrumboard tasks. | If they have completed 5 scrumboard tasks, give the student a 2.7. If they have not completed 5 scrumboard tasks, give them a score of 2.5. If they have completed more than 5 tasks, give them a score of 3.0. | How much would a student with 3 issues and 1 complete scrumboard task receive? | .",
            "url": "https://muffinman1287.github.io/BARN//BARN/csp/2022/11/28/assignment.html",
            "relUrl": "/csp/2022/11/28/assignment.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "AP CSP Lesson Planning",
            "content": "Our Section . We will be planning a lesson for Unit 3, Sections 5 - 7. This includes boolean expressions, conditionals, and nested conditionals. . 3.5 Boolean Expressions . 3.6 Conditionals . 3.7 Nested Conditionals .",
            "url": "https://muffinman1287.github.io/BARN//BARN/2022/11/17/lesson-plan.html",
            "relUrl": "/2022/11/17/lesson-plan.html",
            "date": " • Nov 17, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is the CSP group page for Ben, Luke, Nico, and Arnav. .",
          "url": "https://muffinman1287.github.io/BARN//BARN/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Extra",
          "content": "Answer Key to Hacks . 3.5 . Binary Hacks . Answer: False | Answer: True | Answer: True | Answer: True | Truth Table . AND Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 0 | . 0 | 1 | 0 | . 0 | 0 | 0 | . OR Operator Value 1 Value 2 Result . 1 | 1 | 1 | . 1 | 0 | 1 | . 0 | 1 | 1 | . 0 | 0 | 0 | . Not operator Not Value Result . Not | 1 | 0 | . Not | 0 | 1 | . . 3.6 . AP Prep . Answer: 3 “Please schedule a retake.” | Answer: 2 | Answer: 2 If-else statement | Answer: 1 If statement |",
          "url": "https://muffinman1287.github.io/BARN//BARN/extra/",
          "relUrl": "/extra/",
          "date": ""
      }
      
  

  

  

  

  
  

  
  

  
  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://muffinman1287.github.io/BARN//BARN/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}